apiVersion: batch/v1
kind: Job
metadata:
  name: v2v-diffusion-inference-job-a100
spec:
  template:
    metadata:
      labels:
        app: v2v-diffusion
        type: inference-job
        gpu: a100
    spec:
      restartPolicy: Never

      containers:
      - name: inference
        image: ghcr.io/kkuntal990/v2v-diffusion:latest
        imagePullPolicy: Always

        # Inference command
        command: ["/bin/bash"]
        args:
        - "-c"
        - |
          echo "Starting inference on A100 80GB..."
          echo "GPU Info:"
          nvidia-smi
          echo ""
          echo "Node: $(hostname)"
          echo ""

          # Find the best checkpoint
          CHECKPOINT_DIR="/workspace/storage_a100/checkpoints/ape_v2v_diffusion"

          # Check if checkpoint directory exists
          if [ ! -d "$CHECKPOINT_DIR" ]; then
            echo "ERROR: Checkpoint directory not found: $CHECKPOINT_DIR"
            echo "Available directories in /workspace/storage_a100/checkpoints:"
            ls -la /workspace/storage_a100/checkpoints/ || echo "No checkpoints directory found"
            exit 1
          fi

          # Look for best checkpoint first, otherwise use latest
          if [ -f "$CHECKPOINT_DIR/checkpoint_best.pt" ]; then
            CHECKPOINT="$CHECKPOINT_DIR/checkpoint_best.pt"
            echo "Using best checkpoint: $CHECKPOINT"
          elif ls $CHECKPOINT_DIR/checkpoint_best_*.pt 1> /dev/null 2>&1; then
            CHECKPOINT=$(ls -t $CHECKPOINT_DIR/checkpoint_best_*.pt | head -1)
            echo "Using best checkpoint with suffix: $CHECKPOINT"
          elif ls $CHECKPOINT_DIR/checkpoint_epoch_*.pt 1> /dev/null 2>&1; then
            CHECKPOINT=$(ls -t $CHECKPOINT_DIR/checkpoint_epoch_*.pt | head -1)
            echo "Using latest epoch checkpoint: $CHECKPOINT"
          else
            echo "ERROR: No checkpoint found in $CHECKPOINT_DIR"
            echo "Available files:"
            ls -la $CHECKPOINT_DIR/
            exit 1
          fi

          # Run inference on validation and test sets
          echo ""
          echo "Running inference on validation and test sets..."
          python scripts/run_inference.py \
            --checkpoint "$CHECKPOINT" \
            --config config/cloud_train_config_a100.yaml \
            --output-dir /workspace/storage_a100/inference_results \
            --inference-steps 50 \
            --splits val test

          echo ""
          echo "Inference completed!"
          echo "Results saved to: /workspace/storage_a100/inference_results"
          sleep 1800

        resources:
          requests:
            memory: "32Gi"  # Same as training for A100 80GB
            cpu: "4"
            nvidia.com/a100: "1"
          limits:
            memory: "32Gi"
            cpu: "4"
            nvidia.com/a100: "1"

        volumeMounts:
        - name: storage
          mountPath: /workspace/storage_a100  # Same A100 storage
        - name: dshm
          mountPath: /dev/shm

        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: TORCH_HOME
          value: "/workspace/storage_a100/.cache/torch"
        - name: HF_HOME
          value: "/workspace/storage_a100/.cache/huggingface"
        - name: HF_TOKEN
          valueFrom:
            secretKeyRef:
              name: hf-token
              key: HF_TOKEN

      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: v2v-diffuser-kuntal-a100  # Same A100 storage as training
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: "16Gi"

      # Tolerations for A100 GPU nodes
      tolerations:
      - effect: NoSchedule
        key: nautilus.io/hardware
        operator: Equal
        value: large-gpu
      - effect: PreferNoSchedule
        key: nvidia.com/gpu
        operator: Exists

      # Node affinity to ensure 80GB A100 (not 40GB)
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: nvidia.com/gpu.product
                operator: In
                values:
                - NVIDIA-A100-SXM4-80GB
